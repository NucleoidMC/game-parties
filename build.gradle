plugins {
	id 'fabric-loom' version '1.8.+'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.nucleoid.xyz/" }
	maven { url = "https://maven.gegy.dev/" }
}

sourceSets {
	gametest {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
	runs {
		gametest {
			server()
			name "Game Test"
			vmArg "-Dfabric-api.gametest"
			vmArg "-Dfabric-api.gametest.report-file=${project.buildDir}/junit.xml"
			runDir "build/gametest"
			source sourceSets.gametest
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation 'xyz.nucleoid:plasmid:0.6.3-SNAPSHOT+1.21.4'
	modImplementation include('xyz.nucleoid:more-codecs:0.3.5+1.21.2')

	gametestImplementation sourceSets.main.output
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
